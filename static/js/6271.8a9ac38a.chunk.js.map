{"version":3,"file":"static/js/6271.8a9ac38a.chunk.js","mappings":"uOAEaA,EAAb,0CACI,WAAYC,GAAW,kCACbA,EACT,CAHL,oCAII,WACC,GALL,kBAMI,WACC,GAPL,sBAQI,SAASC,GACL,IAAMD,EAAYE,KAAKF,eACIG,IAAvBF,EAAGG,kBACHH,EAAGG,iBAAkBC,EAAAA,EAAAA,IAAcJ,EAAGK,QAAQC,KAAKC,QAAQC,UAAYT,EAAUU,OAAOC,YAE5F,IALS,EAKHF,EAAWR,EAAGG,gBAAiBQ,EAAOX,EAAGY,cAAeC,EAAQd,EAAUe,UAAUC,SAASC,YAAYL,EAAMH,GAL5G,UAMQK,GANR,IAMT,IAAK,EAAL,qBAAwB,KAAbI,EAAa,QACpB,GAAIjB,IAAOiB,GAAOA,EAAGZ,QAAQC,KAAKC,QAAQW,SAAUD,EAAGE,YAAaF,EAAGG,SAAvE,CAGM,IAAAC,EAAOJ,EAAGL,cAAV,GAAsCU,EAAAA,EAAAA,IAAaX,EAAMU,GAA9BE,EAA3B,EAA2BA,GAAIC,EAA/B,EAA+BA,GAAiCC,EAASzB,EAAGK,QAAQC,KAAKC,QAAQkB,OAAQC,EAAKH,GAnB1G,IAmBgHE,EAAOE,GAAoBC,EAAKJ,GAnBhJ,IAmBsJC,EAAOI,GAAoBC,EAAWb,EAAGc,KAAKC,MAAQhC,EAAG+B,KAAKC,MAAOC,EAnB1M,EAmBgOH,EAC3P9B,EAAGkC,SAASP,GAAKD,EAAKI,EACtB9B,EAAGkC,SAASL,GAAKD,EAAKE,EACtBb,EAAGiB,SAASP,GAAKD,EAAKO,EACtBhB,EAAGiB,SAASL,GAAKD,EAAKK,CALrB,CAMJ,CAfQ,+BAgBZ,GAxBL,uBAyBI,SAAUE,GACN,OAAOA,EAAS9B,QAAQC,KAAKC,QAAQW,MACxC,GA3BL,mBA4BI,WACC,KA7BL,GAA+BkB,EAAAA,G","sources":["../node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js"],"sourcesContent":["import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n"],"names":["Attractor","container","p1","this","undefined","attractDistance","getRangeValue","options","move","attract","distance","retina","pixelRatio","pos1","getPosition","query","particles","quadTree","queryCircle","p2","enable","destroyed","spawning","pos2","getDistances","dx","dy","rotate","ax","x","ay","y","p1Factor","size","value","p2Factor","velocity","particle","ParticlesInteractorBase"],"sourceRoot":""}